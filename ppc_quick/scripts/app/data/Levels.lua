local Levels = {}

Levels.NODE_IS_WHITE  = 1
Levels.NODE_IS_BLACK  = 0
Levels.NODE_IS_EMPTY  = "X"

local levelsData = {}


levelsData[1] = {
    rows = 4,
    cols = 4,
    -- grid = {
    --     {0, 1, 1, 1, 0},
    --     {0, 0, 0, 0, 0},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {0, 1, 1, 1, 0}
    -- }
}
levelsData[2] = {
    rows = 5,
    cols = 5,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[3] = {
    rows = 5,
    cols = 6,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}


levelsData[4] = {
    rows = 6,
    cols = 5,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[5] = {
    rows = 6,
    cols = 6,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[6] = {
    rows = 6,
    cols = 7,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[7] = {
    rows = 7,
    cols = 6,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[8] = {
    rows = 7,
    cols = 7,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[9] = {
    rows = 7,
    cols = 8,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[10] = {
    rows = 8,
    cols = 7,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[11] = {
    rows = 8,
    cols = 8,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[12] = {
    rows = 9,
    cols = 8,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[13] = {
    rows = 8,
    cols = 9,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[14] = {
    rows = 9,
    cols = 9,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[15] = {
    rows = 10,
    cols = 10,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[16] = {
    rows = 10,
    cols = 10,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[17] = {
    rows = 10,
    cols = 10,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}

levelsData[18] = {
    rows = 10,
    cols = 10,
    -- grid = {
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1},
    --     {0, 0, "X", 0, 0},
    --     {0, 0, 0, 0, 0},
    --     {1, 0, 0, 0, 1}
    -- }
}


function Levels.numLevels()
    return #levelsData
end

function Levels.get(levelIndex)
    assert(levelIndex >= 1 and levelIndex <= #levelsData, string.format("levelsData.get() - invalid levelIndex %s", tostring(levelIndex)))
    return clone(levelsData[levelIndex])
end

return Levels
